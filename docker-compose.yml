services:
  db:
    image: postgres:15-alpine
    container_name: ps_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ps_shortener
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nest-prod:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      BASE_URL: ${BASE_URL}
    ports:
      - '3001:3000'
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - prod
    command: >
      sh -c "npx prisma migrate deploy &&
             node dist/main.js"

  nest-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      JWT_SECRET: jwt/secret/123456
      BASE_URL: http://localhost:3000/api
      DATABASE_URL: postgres://postgres:postgres@db:5432/ps_shortener
    volumes:
      - .:/app
      - nest_api_node_modules:/app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    profiles:
      - dev
    command: >
      sh -c "npx prisma migrate deploy &&
             npm run start:dev"

  nest-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    env_file:
      - .env
    environment:
      - NODE_ENV=test
    volumes:
      - .:/app
      - nest_api_node_modules:/app/node_modules
    command: sh -c "yarn test:cov && yarn test:e2e"
    profiles:
      - test

  studio:
    image: prisma/prisma:latest
    container_name: prisma_studio
    command: studio
    depends_on:
      - db
    environment:
      PRISMA_CONFIG: |
        endpoint = "postgresql://postgres:postgres@db:5432/ps_shortener"
    ports:
      - '5555:5555'

volumes:
  db_data:
  nest_api_node_modules:
